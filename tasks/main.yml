---
# roles/glusterfs/tasks/main.yml
#
- name: set facts
  ansible.builtin.set_fact:
    cluster: "{{ ansible_play_hosts |sort |list }}"
    cluster_primary: "{{ ansible_play_batch |sort |first }}"
    block_type: "{{(glusterfs_zfs_devices|length>0)|ternary('zfs','lvm')}}"
    zpool_name: "glusterfs0"
    x509_op: "{{(glusterfs_pem|length>0)|ternary('copy','ownca')}}"

- name: os specific vars
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - default.yml

- name: install
  ansible.builtin.include_tasks: "{{ item }}"
  with_first_found:
    - files:
        - install-{{ ansible_distribution }}.yml
        - install-{{ ansible_os_family }}.yml
      skip: true

- name: install common
  ansible.builtin.include_tasks: install.yml

- name: configure
  ansible.builtin.include_tasks: configure.yml

- name: KaDalu setup
  ansible.builtin.include_tasks: configure-kadalu.yml
  when:
    - glusterfs_kadalu_enabled

- name: setup bricks
  ansible.builtin.include_tasks: configure-bricks-{{block_type}}.yml
  when:
    - glusterfs_block_managed

- name: TLS x509 certificates
  ansible.builtin.include_tasks: configure-x509-{{x509_op}}.yml
  when:
    - glusterfs_tls_data or glusterfs_tls_io

# https://docs.ansible.com/ansible/latest/collections/gluster/gluster/gluster_volume_module.html
- name: configure gluster volume
  gluster.gluster.gluster_volume:
    #arbiters: "{{item.arbiters|default(0)}}"
    bricks: "{{item.bricks|join(',')}}"
    cluster: "{{item.cluster|default(cluster)}}"
    disperses: "{{item.disperses|default(0)}}"
    force: "{{item.force|default(false)}}"
    name: "{{item.name}}"
    # volume set: failed:  'gluster volume set <VOLNAME> quota on' is deprecated. Use 'gluster volume quota <VOLNAME> enable' instead.
    #options: "{{item.options|default({})}}"
    #quota: "{{item.quota|default('10.0MB')}}"
    rebalance: "{{item.rebalance|default(false)}}"
    redundancies: "{{item.redundancies|default(0)}}"
    #replicas: "{{item.replicas|default(0)}}"
    state: present
    #stripes: "{{item.stripes|default(0)}}"
    transport: "{{item.transport|default('tcp')}}"
  loop: "{{glusterfs_volumes}}"
  run_once: true

# volume set: failed:  'gluster volume set <VOLNAME> quota on' is deprecated. Use 'gluster volume quota <VOLNAME> enable' instead.
#
- name: workaround volume options set
  ansible.builtin.shell:
    cmd: |
      GLUSTER='gluster --mode=script --xml'
      {%for k,v in item.options.items()%}
      $GLUSTER volume get {{item.name}} {{k}} |grep -q '<Value>{{v}}</Value>' || \
      { $GLUSTER volume {{k}} {{item.name}}
      {%-if v is sameas true or v is sameas false or ('on' == v) or ('off' == v)%}
      {{(v is true or ('on' == v))|ternary(' enable ',' disable ')-}}
      {%else%}
      {{' %s ' % (v|string)-}}
      {%endif%}
      && echo state_changed; }
      {%endfor%}
    executable: /bin/bash
  register: gluster_get_cmd
  loop: "{{glusterfs_volumes}}"
  changed_when: "'state_changed' in gluster_get_cmd.stdout"
  run_once: true

- name: configure x509 selfsign
  ansible.builtin.import_tasks: configure_x509_self.yml
  when:
    - 0 > 1
    - glusterfs_tls_data or glusterfs_tls_io
    - glusterfs_ca | length == 0
    - glusterfs_key | length == 0
    - glusterfs_pem | length == 0

- name: configure x509
  ansible.builtin.import_tasks: configure_x509.yml
  when:
    - 0 > 1
    - glusterfs_tls_data or glusterfs_tls_io
    - glusterfs_ca | length > 0
    - glusterfs_key | length > 0
    - glusterfs_pem | length > 0

- name: configure
  ansible.builtin.import_tasks: configure.yml
  tags: [ configure ]
  when:
    - 0 > 1
    - glusterfs_pem | length > 0
    - glusterfs_key | length > 0
    - glusterfs_ca | length > 0

- name: create storage pools
  gluster.gluster.gluster_peer:
    nodes: "{{ item }}"
    state: present
  run_once: true
  with_items: "{{ groups[glusterfs_group] }}"
  delegate_to: "{{ groups[glusterfs_group][0] }}"
  when:
    - 0 > 1

- name: purge
  ansible.builtin.import_tasks: purge.yml
  tags: [ "never", "purge" ]
  when:
    - 0 > 1

