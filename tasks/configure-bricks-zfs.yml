---
- name: install zfs
  ansible.builtin.package:
    name: zfs-dkms
    state: present

- name: /etc/modprobe.d/zfs.conf
  ansible.builtin.template:
    dest: /etc/modprobe.d/zfs.conf
    group: root
    lstrip_blocks: yes
    mode: 0644
    owner: root
    src: zfs.conf.j2

#- name: partition disks
#  community.general.parted:
#    align: optimal
#    device: "/dev/{{ item.dev }}"
#    label: gpt
#    name: "zpool{{ item.dev }}"
#    number: 1
#    part_end: "100%"
#    part_start: "0%"
#    state: present
#  with_items:
#    - "{{ glusterfs_zpools }}"

#- name: zpool create
#  ansible.builtin.shell:
#    cmd: |
#      PARTUUID=$(ls -l /dev/disk/by-partuuid/ |sed -n "s/^.*\s\(.*\)\s\+->.*{{ item.dev }}1$/\1/p")
#      zpool create {{item.name}} /dev/disk/by-partuuid/${PARTUUID}
#    creates: "/{{ item.name }}"
#  with_items:
#    - "{{ glusterfs_zpools }}"
#
- name: zpool create
  ansible.builtin.shell:
    cmd: zpool create {{zpool_name}} {{glusterfs_zfs_devices|join(" ")}}
    creates: "/{{zpool_name}}"
  when:
    - glusterfs_zfs_devices |length >0

- name: zfs volume create
  community.general.zfs:
    extra_zfs_properties:
      acltype: posixacl
      mountpoint: "{{item.1|dirname}}"
    name: "{{zpool_name}}/{{(item.1|dirname|split('/'))[-2:]|join('_')}}"
    state: present
  loop: "{{glusterfs_volumes|subelements('bricks')}}"

- name: mkdir brick
  ansible.builtin.file:
    mode: 0766
    path: "{{item.1}}"
    state: directory
  loop: "{{glusterfs_volumes|subelements('bricks')}}"
